name: Payara 6

on: workflow_dispatch

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - name: Clone this repo
        uses: actions/checkout@v3
      - name: Clone Dataverse repo
        uses: actions/checkout@v3
        with:
          repository: IQSS/dataverse
          path: dataverse
          ref: 8305-payara6-ee10-v3
      - name: Build Payara 6 base image
        run: |
          cd dataverse
          mvn -Pct -f modules/container-base install
      - name: Build app image
        run: |
          cd dataverse
          mvn -Pct package
      - name: Start containers
        run: |
          docker compose -f docker-compose-payara6.yml --env-file .env.payara6 up -d
      - uses: emilioschepis/wait-for-endpoint@v1.0.3
        with:
          url: http://localhost:8080/api/info/version
          timeout: 120000
          interval: 10000
#       - name: Test container
#         run: |
#           curl localhost:8080/api/metadatablocks
      #- name: List files in the repository
      #  run: |
      #    ls -laR ${{ env.RUNNER_TEMP }}
      - name: Run database sequence
        run: |
          cd dataverse
          psql -h localhost -U $DATAVERSE_DB_USER $DATAVERSE_DB_NAME -f doc/sphinx-guides/source/_static/util/createsequence.sql
      - name: Run API tests
        run: |
          cd dataverse
          INTEGRATION_TESTS=$(<tests/integration-tests.txt)
          mvn test -Dtest=$INTEGRATION_TESTS -Ddataverse.test.baseurl=http://localhost:8080
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs'
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
      - name: Stop containers
        if: always()
        run: docker compose -f docker-compose-payara6.yml --env-file .env.payara6 down
